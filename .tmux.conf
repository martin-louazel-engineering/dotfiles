set -g mouse on

# Scrolling terminal
bind -n S-Up \
    copy-mode -e \;\
    send-keys -X cursor-up
bind-key -T copy-mode-vi S-Up \
    send-keys -X scroll-up
bind-key -T copy-mode-vi S-Down \
    send-keys -X scroll-down
bind -n S-Pageup \
    copy-mode -e \;\
    send-keys -X halfpage-up
bind -T copy-mode-vi S-Pagedown \
    send-keys -X halfpage-down

# Support normal select + C-c/WheelPress copy with mouse
bind -T copy-mode-vi MouseDragEnd1Pane \
    copy-mode -M \;\
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary -r"
bind -T copy-mode-vi C-c \
    send-keys -X copy-pipe-no-clear "xclip -in -sel clipboard -r" \;\
    send-keys -X cancel

# Middle-click support (cancels copy-mode if needed)
bind -T root MouseDown2Pane \
    run "xclip -o | tmux load-buffer - ; tmux paste-buffer"
bind-key -T copy-mode-vi MouseDown2Pane \
    send-keys -X cancel \;\
    run "xclip -o | tmux load-buffer - ; tmux paste-buffer"

# Double LMB Select & Copy (Word)
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"

# Triple LMB Select & Copy (Line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"


# don't rename windows automatically
set-option -g allow-rename off
# enable true color support
set -ga terminal-overrides ',*:Tc'
set -g default-terminal "xterm-256color"
set-option -g xterm-keys on
# fix escape for the sake of vim
set -sg escape-time 0
# clear bindings
unbind C-b
unbind '"'
unbind %
# nicer prefix
set -g prefix C-Space
bind Space send-prefix
# Command to know if current pane is vim. Used for seemless integration
is_vim="tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$'"
# Make vi the copy-mode editor
set -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi Y send-keys -X copy-pipe "xclip -r -in -sel primary" \; display-message "Copied to selection"
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -r -in -sel clipboard" \; display-message "Copied to clipboard"
bind-key -T copy-mode-vi C-o \
    send-keys -X select-word \;\
    send-keys -X copy-pipe "xclip -in -sel primary" \;\
    send-keys -X cancel \;\
    run-shell "xclip -o -sel primary | xargs -I{} tmux new-window -c \"#{pane_current_path}\" 'vim {}'"


# do like terminator
bind C-E split-window -h -c "#{pane_current_path}"
bind C-O split-window -v -c "#{pane_current_path}"

bind -n C-S-Left resize-pane -L 3
bind -n C-S-Right resize-pane -R 3
bind -n C-S-Up resize-pane -U 3
bind -n C-S-Down resize-pane -D 3

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

bind -n C-M-Left swap-pane -U
bind -n C-M-Right swap-pane -D

bind -n C-x resize-pane -Z

# Vim-like split-navigation
bind -n C-h if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind -n C-j if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind -n C-k if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind -n C-l if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
bind -n M-h if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 3'
bind -n M-j if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 3'
bind -n M-k if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 3'
bind -n M-l if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 3'

# Window navigation
bind -n C-Pageup previous-window
bind -n C-Pagedown next-window
bind -n C-S-Pageup swap-window -t -1\; select-window -t -1
bind -n C-S-Pagedown swap-window -t +1\; select-window -t +1

#if-shell "test -f ~/.tmux-status.conf" "source ~/.tmux-status.conf"
bind r source-file ~/.tmux.conf \; display-message "reloaded tmux.conf"

# Custom theme
TERM_BG1="#222222"
TERM_BG2="#111111"
BG_1="colour237"
BG_2="colour238"
COLOR_1="colour150"
COLOR_2="colour174"
FG_1="colour249"

STATUS_LEFT_1="#[fg=$BG_1,bg=$COLOR_1] #S #[fg=$COLOR_1,bg=$BG_1]#[fg=$FG_1,bg=$BG_1] #W #[fg=$BG_1,bg=$BG_2]"
STATUS_LEFT_2="#[fg=$BG_1,bg=$COLOR_2] #S #[fg=$COLOR_2,bg=$BG_1]#[fg=$FG_1,bg=$BG_1] #W #[fg=$BG_1,bg=$BG_2]"
STATUS_RIGHT_1="#[fg=$BG_1,bg=$BG_2]#[fg=$FG_1,bg=$BG_1] %a %d-%m-%Y #[fg=$COLOR_1,bg=$BG_1]#[fg=$BG_1,bg=$COLOR_1] #H #[fg=$COLOR_1,bg=$BG_1,bold] %R "
STATUS_RIGHT_2="#[fg=$BG_1,bg=$BG_2]#[fg=$FG_1,bg=$BG_1] %a %d-%m-%Y #[fg=$COLOR_2,bg=$BG_1]#[fg=$BG_1,bg=$COLOR_2] #H #[fg=$COLOR_2,bg=$BG_1,bold] %R "
WINDOW=" #[fg=$FG_1] #I #W#F "
WINDOW_ACTIVE="#[fg=$BG_2,bg=$BG_1]#[fg=default,bold] #I #W#F #[fg=$BG_1,bg=$BG_2]"

set -g window-style "fg=#EEEEEE,bg=$TERM_BG2"
set -g window-active-style "fg=#FFFFFF,bg=$TERM_BG1"

set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=$FG_1,bg=$BG_1"
set -g status-right-style "none"
set -g pane-border-style "fg=$FG_1, bg=$TERM_BG2"
set -g pane-active-border-style "fg=$COLOR_1, bg=$TERM_BG2"
set -g status-style "none,bg=$BG_2"
set -g message-style "fg=$FG_1,bg=$BG_1"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "none,fg=$COLOR_1,bg=$BG_2"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=$FG_1,bg=$BG_2"
set -g status-left $STATUS_LEFT_1
set -g status-right $STATUS_RIGHT_1
setw -g window-status-format $WINDOW
setw -g window-status-current-format $WINDOW_ACTIVE

bind -n M-F12 \
	set -g pane-active-border-style "fg=$COLOR_2, bg=$TERM_BG2" \;\
	set -g status-left $STATUS_LEFT_2 \;\
	set -g status-right $STATUS_RIGHT_2 \;\

bind -n M-F11 \
	set -g pane-active-border-style "fg=$COLOR_1, bg=$TERM_BG2" \;\
	set -g status-left $STATUS_LEFT_1 \;\
	set -g status-right $STATUS_RIGHT_1 \;\

bind -T root F12 \
	set prefix None \;\
	set key-table off \;\
	send-keys M-F11 \;\
	set -g status-left $STATUS_LEFT_2 \;\
	set -g status-right $STATUS_RIGHT_2 \;\
	refresh-client -S \;\

bind -T off F12 \
	set -u prefix \;\
	set -u key-table \;\
	send-keys M-F12 \;\
	set -g status-left $STATUS_LEFT_1 \;\
	set -g status-right $STATUS_RIGHT_1 \;\
	refresh-client -S \;\
