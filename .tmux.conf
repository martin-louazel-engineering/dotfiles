set -g mouse on

# Scrolling terminal
bind -n S-Up \
    copy-mode -e \;\
    send-keys -X cursor-up
bind-key -T copy-mode-vi S-Up \
    send-keys -X scroll-up
bind-key -T copy-mode-vi S-Down \
    send-keys -X scroll-down
bind -n S-Pageup \
    copy-mode -e \;\
    send-keys -X halfpage-up
bind -T copy-mode-vi S-Pagedown \
    send-keys -X halfpage-down
bind k copy-mode

tmux_commands_with_legacy_scroll="less man"

bind-key -T root WheelUpPane \
	if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Up Up" "copy-mode -et="'

bind-key -T root WheelDownPane \
	if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Down Down" "send -Mt="'

# Support normal select + C-c/WheelPress copy with mouse
bind -T copy-mode-vi MouseDragEnd1Pane \
    copy-mode -M \;\
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary -r"
bind -T copy-mode-vi C-c \
    send-keys -X copy-pipe-no-clear "xclip -in -sel clipboard -r" \;\
    send-keys -X cancel

# Middle-click support (cancels copy-mode if needed)
bind -T root MouseDown2Pane \
    run "xclip -o | tmux load-buffer - ; tmux paste-buffer"
bind-key -T copy-mode-vi MouseDown2Pane \
    send-keys -X cancel \;\
    run "xclip -o | tmux load-buffer - ; tmux paste-buffer"

# Double LMB Select & Copy (Word)
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"

# Triple LMB Select & Copy (Line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"


# don't rename windows automatically
set-option -g allow-rename off
# enable true color support
set -ga terminal-overrides ',*:Tc'
set -g default-terminal "xterm-256color"
set-option -g xterm-keys on
# fix escape for the sake of vim
set -sg escape-time 0
# clear bindings
unbind C-b
unbind '"'
unbind %
# nicer prefix
set -g prefix C-Space
bind Space send-prefix
# Make vi the copy-mode editor
set -g mode-keys vi
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi Y send-keys -X copy-pipe "xclip -r -in -sel primary" \; display-message "Copied to selection"
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -r -in -sel clipboard" \; display-message "Copied to clipboard"
bind-key -T copy-mode-vi C-o \
    send-keys -X select-word \;\
    send-keys -X copy-pipe "xclip -in -sel primary" \;\
    send-keys -X cancel \;\
    run-shell "xclip -o -sel primary | xargs -I{} tmux new-window -c \"#{pane_current_path}\" 'vim {}'"

bind j command-prompt "join-pane -t '%%'"

# do like terminator
bind C-E split-window -h -c "#{pane_current_path}"
bind C-O split-window -v -c "#{pane_current_path}"

bind -n C-S-Left resize-pane -L 3
bind -n C-S-Right resize-pane -R 3
bind -n C-S-Up resize-pane -U 3
bind -n C-S-Down resize-pane -D 3

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

bind -n C-M-Left swap-pane -U
bind -n C-M-Right swap-pane -D

# Command to know if current pane is vim. Used for seemless integration
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# Vim-like split-navigation
bind -n C-h if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind -n C-j if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind -n C-k if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind -n C-l if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
bind -n M-h if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 3'
bind -n M-j if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 3'
bind -n M-k if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 3'
bind -n M-l if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 3'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Window navigation
bind -n C-Pageup previous-window
bind -n C-Pagedown next-window
bind -n C-S-Pageup swap-window -t -1\; select-window -t -1
bind -n C-S-Pagedown swap-window -t +1\; select-window -t +1

#if-shell "test -f ~/.tmux-status.conf" "source ~/.tmux-status.conf"
bind r source-file ~/.tmux.conf \; display-message "reloaded tmux.conf"

# Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
set -g @plugin 'MunifTanjim/tmux-suspend'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
